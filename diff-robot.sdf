<?xml version="1.0" ?>
<sdf version="1.6">

    <!-- Differential drive robot model -->
    <model name='robot' canonical_link='chassis'>

        <!-- Initial pose of the model: x=0, y=0, z=0, roll=0, pitch=0, yaw=0 -->
        <pose>0 0 0 0 0 0</pose>

        <!-- ===================== Chassis ===================== -->
        <link name='chassis'>
            <pose relative_to='__model__'>0.5 0 0.4 0 0 0</pose> 

            <inertial> 
                <mass>1.14395</mass>
                <inertia>
                    <ixx>0.095329</ixx>
                    <ixy>0</ixy>
                    <ixz>0</ixz>
                    <iyy>0.381317</iyy>
                    <iyz>0</iyz>
                    <izz>0.476646</izz>
                </inertia>
            </inertial>

            <visual name='chassis_visual'> 
                <geometry>
                    <box>
                        <size>2.0 1.0 0.5</size>
                    </box>
                </geometry>
                <material>
                    <ambient>0.0 1.0 1.0 0.8</ambient>
                    <diffuse>0.0 0.5 1.0 0.975</diffuse>
                    <specular>0 0 0 0</specular>
                </material>
            </visual>

            <collision name='chassis_collision'>
                <geometry>
                    <box>
                        <size>2.0 1.0 0.5</size>
                    </box>
                </geometry>
            </collision>

            <!-- ===================== IMU Sensor ===================== -->
            <!-- IMU sensor attached to the chassis link -->
            <sensor name="imu_sensor" type="imu">
                <always_on>1</always_on>           <!-- Sensor always active -->
                <update_rate>50</update_rate>      <!-- Data generated at 50 Hz -->
                <visualize>true</visualize>        <!-- Visualize in GUI -->
                <topic>imu</topic>                 <!-- Topic to publish IMU data -->
            </sensor>
        </link>
        <!-- ===================== Left Wheel ===================== -->
        <link name='left_wheel'>
            <!-- Pose of left wheel relative to the chassis -->
            <pose relative_to="chassis">-0.5 0.6 0 -1.5707 0 0</pose>

            <!-- Inertial properties -->
            <inertial>
                <mass>1</mass>
                <inertia>
                    <ixx>0.043333</ixx>
                    <ixy>0</ixy>
                    <ixz>0</ixz>
                    <iyy>0.043333</iyy>
                    <iyz>0</iyz>
                    <izz>0.08</izz>
                </inertia>
            </inertial>

            <!-- Visual appearance -->
            <visual name='left_wheel_visual'>
                <geometry>
                    <cylinder>
                        <radius>0.4</radius>
                        <length>0.2</length>
                    </cylinder>
                </geometry>
                <material>
                    <ambient>1.0 1.0 1.0 1</ambient>
                    <diffuse>0.05 0.05 0.05 1</diffuse>
                    <specular>1 1 1 1</specular>
                </material>
            </visual>

            <!-- Collision geometry -->
            <collision name='left_wheel_collision'>
                <geometry>
                    <cylinder>
                        <radius>0.4</radius>
                        <length>0.2</length>
                    </cylinder>
                </geometry>
            </collision>
        </link>

        <!-- ===================== Right Wheel ===================== -->
        <link name='right_wheel'>
            <!-- Pose of right wheel relative to the chassis -->
            <pose relative_to="chassis">-0.5 -0.6 0 -1.5707 0 0</pose>

            <!-- Inertial properties -->
            <inertial>
                <mass>1</mass>
                <inertia>
                    <ixx>0.043333</ixx>
                    <ixy>0</ixy>
                    <ixz>0</ixz>
                    <iyy>0.043333</iyy>
                    <iyz>0</iyz>
                    <izz>0.08</izz>
                </inertia>
            </inertial>

            <!-- Visual appearance -->
            <visual name='right_wheel_visual'>
                <geometry>
                    <cylinder>
                        <radius>0.4</radius>
                        <length>0.2</length>
                    </cylinder>
                </geometry>
                <material>
                    <ambient>1.0 1.0 1.0 1</ambient>
                    <diffuse>0.05 0.05 0.05 1</diffuse>
                    <specular>1 1 1 1</specular>
                </material>
            </visual>

            <!-- Collision geometry -->
            <collision name='right_wheel_collision'>
                <geometry>
                    <cylinder>
                        <radius>0.4</radius>
                        <length>0.2</length>
                    </cylinder>
                </geometry>
            </collision>
        </link>

        <!-- ===================== Caster Wheel ===================== -->
        <!-- Frame to position the caster wheel -->
        <frame name="caster_frame" attached_to='chassis'>
            <pose>0.8 0 -0.2 0 0 0</pose>
        </frame>

        <link name='caster'>
            <!-- Pose relative to caster frame -->
            <pose relative_to='caster_frame'/>
            
            <!-- Inertial properties -->
            <inertial>
                <mass>1</mass>
                <inertia>
                    <ixx>0.016</ixx>
                    <ixy>0</ixy>
                    <ixz>0</ixz>
                    <iyy>0.016</iyy>
                    <iyz>0</iyz>
                    <izz>0.016</izz>
                </inertia>
            </inertial>

            <!-- Visual appearance -->
            <visual name='visual'>
                <geometry>
                    <sphere>
                        <radius>0.2</radius>
                    </sphere>
                </geometry>
                <material>
                    <ambient>1.0 0.0 0.0 1</ambient>
                    <diffuse>1 0 0 1</diffuse>
                    <specular>0 0 0 0</specular>
                </material>
            </visual>

            <!-- Collision geometry -->
            <collision name='collision'>
                <geometry>
                    <sphere>
                        <radius>0.2</radius>
                    </sphere>
                </geometry>
            </collision>
        </link>

        <!-- ===================== Joints ===================== -->
        <!-- Revolute joint: chassis ↔ left wheel -->
        <joint name='left_wheel_joint' type='revolute'>
            <pose relative_to='left_wheel'/>
            <parent>chassis</parent> <!-- Parent link -->
            <child>left_wheel</child> <!-- Child link -->
            <axis>
                <xyz expressed_in='__model__'>0 1 0</xyz>
                <!-- Rotation limits (effectively ±infinity) -->
                <limit>
                    <lower>-1.79769e+308</lower>
                    <upper>1.79769e+308</upper>
                </limit>
            </axis>
        </joint>

        <!-- Revolute joint: chassis ↔ right wheel -->
        <joint name='right_wheel_joint' type='revolute'>
            <pose relative_to='right_wheel'/>
            <parent>chassis</parent>
            <child>right_wheel</child>
            <axis>
                <xyz expressed_in='__model__'>0 1 0</xyz>
                <limit>
                    <lower>-1.79769e+308</lower>
                    <upper>1.79769e+308</upper>
                </limit>
            </axis>
        </joint>

        <!-- Ball joint: chassis ↔ caster wheel -->
        <joint name='caster_wheel' type='ball'>
            <parent>chassis</parent>
            <child>caster</child>
            <!-- Ball joints don’t need axis or limits -->
        </joint>

        <!-- ===================== DiffDrive Plugin ===================== -->
        <!-- Converts velocity commands (cmd_vel) into wheel motion and publishes odometry -->
        <plugin
            filename="libignition-gazebo-diff-drive-system.so"
            name="ignition::gazebo::systems::DiffDrive">
            <left_joint>left_wheel_joint</left_joint> <!-- Left wheel joint -->
            <right_joint>right_wheel_joint</right_joint> <!-- Right wheel joint -->
            <wheel_separation>1.2</wheel_separation> <!-- Distance between left & right wheels -->
            <wheel_radius>0.4</wheel_radius> <!-- Radius of wheels -->
            <odom_publish_frequency>1</odom_publish_frequency> <!-- Odometry publish rate [Hz] -->
            <topic>cmd_vel</topic> <!-- ROS-like topic for velocity commands -->
        </plugin>

        <!-- IMU plugin: enables the IMU sensor to publish orientation, angular velocity, and acceleration -->
        <plugin
            filename="libignition-gazebo-imu-system.so"
            name="ignition::gazebo::systems::Imu">
        </plugin>

    </model>
</sdf>
